[{"D:\\React Gormmet\\react-gormmet\\src\\index.js":"1","D:\\React Gormmet\\react-gormmet\\src\\reportWebVitals.js":"2","D:\\React Gormmet\\react-gormmet\\src\\App.js":"3","D:\\React Gormmet\\react-gormmet\\src\\Route\\Navi.js":"4","D:\\React Gormmet\\react-gormmet\\src\\component\\Login.js":"5","D:\\React Gormmet\\react-gormmet\\src\\component\\StartHeader.js":"6","D:\\React Gormmet\\react-gormmet\\src\\component\\StartFooter.js":"7","D:\\React Gormmet\\react-gormmet\\src\\component\\SignUp.js":"8","D:\\React Gormmet\\react-gormmet\\src\\call\\UserCall.js":"9","D:\\React Gormmet\\react-gormmet\\src\\reducer\\UserReducer.js":"10","D:\\React Gormmet\\react-gormmet\\src\\container\\containsign.js":"11","D:\\React Gormmet\\react-gormmet\\src\\action\\action.js":"12"},{"size":857,"mtime":1607406873798,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":555,"mtime":1607338352946,"results":"16","hashOfConfig":"14"},{"size":427,"mtime":1607409374787,"results":"17","hashOfConfig":"14"},{"size":1831,"mtime":1607344259122,"results":"18","hashOfConfig":"14"},{"size":1642,"mtime":1606972120685,"results":"19","hashOfConfig":"14"},{"size":348,"mtime":1607337593726,"results":"20","hashOfConfig":"14"},{"size":6595,"mtime":1607415696810,"results":"21","hashOfConfig":"14"},{"size":796,"mtime":1607415619055,"results":"22","hashOfConfig":"14"},{"size":295,"mtime":1607408397360,"results":"23","hashOfConfig":"14"},{"size":329,"mtime":1607407771923,"results":"24","hashOfConfig":"14"},{"size":101,"mtime":1607405601476,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"140hah0",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\React Gormmet\\react-gormmet\\src\\index.js",[],"D:\\React Gormmet\\react-gormmet\\src\\reportWebVitals.js",[],["56","57"],"D:\\React Gormmet\\react-gormmet\\src\\App.js",["58","59","60"],"import React from 'react';\nimport { Grommet, Footer, Box } from 'grommet';\nimport { AppBar, Collapsable } from './component/StartHeader';\nimport { SimpleFooter } from './component/StartFooter';\nimport { Navi } from './Route/Navi';\n\nconst theme = {\n  global: {\n    \n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nfunction App() {\n  return (\n   <Grommet theme={theme} full={true}>\n   \n    <Collapsable></Collapsable>\n    <Navi></Navi>\n   <SimpleFooter></SimpleFooter>\n   </Grommet>\n  );\n}\n\nexport default App;\n","D:\\React Gormmet\\react-gormmet\\src\\Route\\Navi.js",[],"D:\\React Gormmet\\react-gormmet\\src\\component\\Login.js",["61"],"import React, { useState } from 'react';\r\nimport { FormField, TextInput, Box, Button, Form, Heading } from 'grommet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MailOption, Lock } from 'grommet-icons';\r\nimport {FindUser} from '../call/UserCall'\r\n\r\n\r\n\r\n\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const ULogin = () => {\r\n  let history=useHistory();\r\n    const [value,setValue]=useState({email:'',password:''})\r\n    const HandleData=(event)=>{\r\n        console.log(value);\r\n        FindUser(value);\r\n    }\r\n return(\r\n     <Box align=\"center\" justify=\"between\" height=\"90vh\" >\r\n         <Box margin={\"top\",\"20vh\"} align=\"center\">\r\n         <Heading>Login</Heading>\r\n         <Form\r\n            value={value}\r\n            onChange={nextValue => setValue(nextValue)}\r\n            onSubmit={HandleData}\r\n          >\r\n            \r\n            <FormField label=\"Email\" name=\"email\" required>\r\n              <TextInput  icon={<MailOption />} name=\"email\" type=\"email\"  pattern=\"[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[com]{3}\"\r\n                    placeholder=\"abc@gmail.com\"  />\r\n            </FormField>\r\n            <FormField label=\"Password\" name=\"password\" required>\r\n              <TextInput icon={<Lock />} name=\"password\" type=\"password\" />\r\n            </FormField>\r\n\r\n            {/* {message && (\r\n              <Box pad={{ horizontal: 'small' }}>\r\n                <Text color=\"status-error\">{message}</Text>\r\n              </Box>\r\n            )} */}\r\n\r\n            <Box direction=\"row\" justify=\"between\" margin={{ top: 'medium' }}>\r\n            <Button type=\"submit\" label=\"Login\" primary />\r\n              <Button  label=\"Signup\" onClick={()=>{history.push('/Signup')}}/>\r\n              \r\n            </Box>\r\n          </Form>\r\n    </Box>\r\n    </Box>\r\n );\r\n  \r\n};\r\n","D:\\React Gormmet\\react-gormmet\\src\\component\\StartHeader.js",["62","63","64","65"],"import React from 'react';\r\nimport { Menu, Article, Add, Home, Login,UserAdd} from 'grommet-icons';\r\nimport {\r\n  Anchor,\r\n  Box,\r\n  Grommet,\r\n  Header,\r\n  Nav,\r\n \r\n  ResponsiveContext,\r\n  DropButton,\r\n} from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\nconst CollapsableNav = () => (\r\n  <Grommet theme={grommet}>\r\n    <Header background=\"dark-1\" pad=\"medium\">\r\n      <Box direction=\"row\" align=\"center\" gap=\"small\">\r\n        <Article />\r\n      </Box>\r\n      <ResponsiveContext.Consumer>\r\n        {(responsive) =>\r\n          responsive === \"small\" ? (\r\n           \r\n            <DropButton\r\n            icon={<Menu />}\r\n              dropAlign={{ top: \"bottom\", right: \"right\" }}\r\n              dropContent={<Box pad=\"large\" width=\"100vw\" background=\"light\" justify=\"center\">\r\n              <Anchor alignSelf=\"center\" margin={\"top\",\"1vh\"} title=\"Home\" href=\"/\" ><Home></Home>Home</Anchor>\r\n              <Anchor alignSelf=\"center\"  margin={\"top\",\"1vh\"} title=\"Login\" href=\"/Login\" ><Login></Login>LogIn</Anchor>\r\n              <Anchor alignSelf=\"center\"  margin={\"top\",\"1vh\"}  title=\"Signup\" href=\"/Signup\"><UserAdd></UserAdd>SignUp</Anchor>\r\n              </Box>}\r\n            />\r\n          ) : (\r\n            <Nav direction=\"row\">\r\n              <Anchor href=\"/\" title=\"Home\"><Home></Home></Anchor>\r\n              <Anchor href=\"/Login\" title=\"Login\" ><Login></Login></Anchor>\r\n              <Anchor href=\"/Signup\" title=\"Signup\"  ><UserAdd></UserAdd></Anchor>\r\n            </Nav>\r\n          )\r\n        }\r\n      </ResponsiveContext.Consumer>\r\n    </Header>\r\n  </Grommet>\r\n);\r\n\r\nexport const Collapsable = () => <CollapsableNav />;","D:\\React Gormmet\\react-gormmet\\src\\component\\StartFooter.js",["66","67","68","69"],"import React from 'react';\r\n\r\nimport { Footer, grommet, Grommet, Main, Text, Box } from 'grommet';\r\n\r\nexport const SimpleFooter = () => (\r\n \r\n    \r\n    <Footer background=\"light-4\" justify=\"center\" pad=\"small\" >\r\n      <Text textAlign=\"center\" size=\"small\">\r\n        Â© 2020 Copyright E-News \r\n      </Text>\r\n    </Footer>\r\n    \r\n    \r\n    \r\n  \r\n);","D:\\React Gormmet\\react-gormmet\\src\\component\\SignUp.js",["70","71","72"],"import React, { useState } from \"react\";\r\nimport {\r\n  FormField,\r\n  TextInput,\r\n  Box,\r\n  Button,\r\n  Form,\r\n  Heading,\r\n  MaskedInput,\r\n  Text,\r\n  Grommet,\r\n  ResponsiveContext,\r\n} from \"grommet\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  User,\r\n  MailOption,\r\n  Lock,\r\n  Directions,\r\n  Phone,\r\n  Hide,\r\n  View,\r\n} from \"grommet-icons\";\r\n\r\nimport { RegisterUser, getMsg } from \"../call/UserCall\";\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const SignUp = () => {\r\n  let history = useHistory();\r\n  const [reveal, setReveal] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [value, setValue] = useState({\r\n    Username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n    city: \"\",\r\n    mobile: \"\",\r\n    aadhar: \"\",\r\n  });\r\n  const HandleData = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let obj = {\r\n      username: value.Username,\r\n      email: value.email,\r\n      password: value.password,\r\n      city: value.city,\r\n      mobile: value.mobile,\r\n      aadhar: value.aadhar,\r\n      permission: false,\r\n      role: \"reporter\",\r\n    };\r\n    console.log(obj);\r\n\r\n    let msg = await RegisterUser(obj);\r\n    console.log(msg);\r\n    setMessage(msg);\r\n  };\r\n\r\n  const checkPass = () => {\r\n    const { password, cpassword } = value;\r\n    if (password === cpassword) {\r\n    } else {\r\n      return \" Not Matching password\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box align=\"center\" justify=\"between\" height=\"100vh\" overflow=\"auto\">\r\n      <Box margin={(\"top\", \"-1vh\")} align=\"center\" height=\"100vh\">\r\n        <Heading>SignUp</Heading>\r\n        <Form\r\n          value={value}\r\n          onChange={(nextValue) => setValue(nextValue)}\r\n          onSubmit={HandleData}\r\n        >\r\n          <Box overflow=\"auto\">\r\n            <Box direction=\"row-responsive\">\r\n              <Box margin={(\"right\", \"2vw\")} direction=\"column\">\r\n                <FormField label=\"Username\" name=\"Username\" required>\r\n                  <TextInput icon={<User />} name=\"Username\" type=\"text\" />\r\n                </FormField>\r\n                <FormField label=\"Email\" name=\"email\" required>\r\n                  <TextInput\r\n                    name=\"email\"\r\n                    icon={<MailOption />}\r\n                    type=\"email\"\r\n                    pattern=\"[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[com]{3}\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                  />\r\n                </FormField>\r\n                <FormField\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  required\r\n                  validate={checkPass}\r\n                >\r\n                  <TextInput name=\"password\" icon={<Lock />} type=\"password\" />\r\n                </FormField>\r\n                <Box direction=\"row\">\r\n                  <FormField\r\n                    label=\" Confirm Password\"\r\n                    name=\"cpassword\"\r\n                    required\r\n                    validate={checkPass}\r\n                  >\r\n                    {/* <TextInput name=\"cpassword\" icon={< Lock/>} type=\"password\" onKeyUp={checkPass}/> */}\r\n                    <TextInput\r\n                      plain\r\n                      type={reveal ? \"text\" : \"password\"}\r\n                      name=\"cpassword\"\r\n                      icon={<Lock />}\r\n                    />\r\n                  </FormField>\r\n                  <Button\r\n                    icon={\r\n                      reveal ? <View size=\"medium\" /> : <Hide size=\"medium\" />\r\n                    }\r\n                    onClick={() => setReveal(!reveal)}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <Box margin={(\"left\", \"2vw\")} direction=\"column\">\r\n                <FormField label=\"City\" name=\"city\" required>\r\n                  <TextInput icon={<Directions />} name=\"city\" type=\"text\" />\r\n                </FormField>\r\n                <FormField name=\"mobile\" label=\"Mobile no\" required>\r\n                  <MaskedInput\r\n                    name=\"mobile\"\r\n                    icon={<Phone />}\r\n                    pattern=\"[0-9]{1,3}[-]{1}[0-9]{1,3}[-]{1}[0-9]{1,4}\"\r\n                    mask={[\r\n                      {\r\n                        length: 3,\r\n                        regexp: /^[0-9]{1,3}$/,\r\n                        placeholder: \"xxx\",\r\n                      },\r\n\r\n                      { fixed: \"-\" },\r\n                      {\r\n                        length: 3,\r\n                        regexp: /^[0-9]{1,3}$/,\r\n                        placeholder: \"xxx\",\r\n                      },\r\n                      { fixed: \"-\" },\r\n                      {\r\n                        length: 4,\r\n                        regexp: /^[0-9]{1,4}$/,\r\n                        placeholder: \"xxxx\",\r\n                      },\r\n                    ]}\r\n                  />\r\n                </FormField>\r\n\r\n                <FormField label=\"Aadhar No\" name=\"aadhar\" required>\r\n                  <MaskedInput\r\n                    name=\"aadhar\"\r\n                    pattern=\"[0-9]{1,4}[-]{1}[0-9]{1,4}[-]{1}[0-9]{1,4}\"\r\n                    mask={[\r\n                      {\r\n                        length: 4,\r\n                        regexp: /^[0-9]{1,4}$/,\r\n                        placeholder: \"xxxx\",\r\n                      },\r\n                      { fixed: \"-\" },\r\n\r\n                      {\r\n                        length: 4,\r\n                        regexp: /^[0-9]{1,4}$/,\r\n                        placeholder: \"xxxx\",\r\n                      },\r\n                      { fixed: \"-\" },\r\n                      {\r\n                        length: 4,\r\n                        regexp: /^[0-9]{1,4}$/,\r\n                        placeholder: \"xxxx\",\r\n                      },\r\n                    ]}\r\n                  ></MaskedInput>\r\n                </FormField>\r\n              </Box>\r\n            </Box>\r\n            <Box direction=\"row\" justify=\"center\" margin={{ top: \"medium\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                label=\"Signup\"\r\n                primary\r\n                margin={(\"right\", \"1vw\")}\r\n              />\r\n              <Button\r\n                label=\"Login\"\r\n                margin={(\"left\", \"1vw\")}\r\n                onClick={() => {\r\n                  history.push(\"/Login\");\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Form>\r\n        {message && (\r\n          <Box pad={{ horizontal: \"medium\" }}>\r\n            <Text color=\"#00C781\">{message}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\React Gormmet\\react-gormmet\\src\\call\\UserCall.js",["73","74"],"D:\\React Gormmet\\react-gormmet\\src\\reducer\\UserReducer.js",[],"D:\\React Gormmet\\react-gormmet\\src\\container\\containsign.js",[],"D:\\React Gormmet\\react-gormmet\\src\\action\\action.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":19,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":30},{"ruleId":"79","severity":1,"message":"84","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":21,"column":28,"nodeType":"87","messageId":"88","endLine":21,"endColumn":29},{"ruleId":"79","severity":1,"message":"89","line":2,"column":25,"nodeType":"81","messageId":"82","endLine":2,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":29,"column":55,"nodeType":"87","messageId":"88","endLine":29,"endColumn":56},{"ruleId":"85","severity":1,"message":"86","line":30,"column":56,"nodeType":"87","messageId":"88","endLine":30,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":31,"column":56,"nodeType":"87","messageId":"88","endLine":31,"endColumn":57},{"ruleId":"79","severity":1,"message":"90","line":3,"column":18,"nodeType":"81","messageId":"82","endLine":3,"endColumn":25},{"ruleId":"79","severity":1,"message":"91","line":3,"column":27,"nodeType":"81","messageId":"82","endLine":3,"endColumn":34},{"ruleId":"79","severity":1,"message":"92","line":3,"column":36,"nodeType":"81","messageId":"82","endLine":3,"endColumn":40},{"ruleId":"79","severity":1,"message":"83","line":3,"column":48,"nodeType":"81","messageId":"82","endLine":3,"endColumn":51},{"ruleId":"79","severity":1,"message":"91","line":11,"column":3,"nodeType":"81","messageId":"82","endLine":11,"endColumn":10},{"ruleId":"79","severity":1,"message":"93","line":12,"column":3,"nodeType":"81","messageId":"82","endLine":12,"endColumn":20},{"ruleId":"79","severity":1,"message":"94","line":25,"column":24,"nodeType":"81","messageId":"82","endLine":25,"endColumn":30},{"ruleId":"79","severity":1,"message":"95","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":8,"column":30,"nodeType":"98","messageId":"99","endLine":8,"endColumn":32},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'AppBar' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Add' is defined but never used.","'grommet' is defined but never used.","'Grommet' is defined but never used.","'Main' is defined but never used.","'ResponsiveContext' is defined but never used.","'getMsg' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]